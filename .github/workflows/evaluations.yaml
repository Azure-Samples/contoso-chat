name: Evaluate

on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - main

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  evaluate:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      APPINSIGHTS_CONNECTIONSTRING: ${{ vars.APPINSIGHTS_CONNECTIONSTRING }}
      AZURE_CONTAINER_ENVIRONMENT_NAME: ${{ vars.AZURE_CONTAINER_ENVIRONMENT_NAME }}
      AZURE_CONTAINER_REGISTRY_ENDPOINT: ${{ vars.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
      AZURE_CONTAINER_REGISTRY_NAME: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
      AZURE_COSMOS_NAME: ${{ vars.AZURE_COSMOS_NAME }}
      AZURE_EMBEDDING_NAME: ${{ vars.AZURE_EMBEDDING_NAME }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
      AZURE_OPENAI_CHAT_DEPLOYMENT: ${{ vars.AZURE_OPENAI_CHAT_DEPLOYMENT }}
      AZURE_OPENAI_NAME: ${{ vars.AZURE_OPENAI_NAME }}
      AZURE_OPENAI_RESOURCE_GROUP_LOCATION: ${{ vars.AZURE_OPENAI_RESOURCE_GROUP_LOCATION }}
      AZURE_SEARCH_ENDPOINT: ${{ vars.AZURE_SEARCH_ENDPOINT }}
      AZURE_SEARCH_NAME: ${{ vars.AZURE_SEARCH_NAME }}
      COSMOS_CONTAINER: ${{ vars.COSMOS_CONTAINER }}
      COSMOS_ENDPOINT: ${{ vars.COSMOS_ENDPOINT }}
      OPENAI_TYPE: ${{ vars.OPENAI_TYPE }}
      SERVICE_ACA_IMAGE_NAME: ${{ vars.SERVICE_ACA_IMAGE_NAME }}
      SERVICE_ACA_NAME: ${{ vars.SERVICE_ACA_NAME }}
      SERVICE_ACA_URI: ${{ vars.SERVICE_ACA_URI }}

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r src/api/requirements.txt

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
  
      - name: Set az account
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az account set --subscription ${{env.AZURE_SUBSCRIPTION_ID}}

      - name: evaluate
        working-directory: ./src/api
        run: |
          python -m evaluate
      
      - name: Upload eval results as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: eval_result
          path: ./src/api/eval_results.jsonl

      - name: GitHub Summary Step
        if: ${{ success() }}
        working-directory: ./src/api
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "ðŸ“Š Evaluation Results" >> $GITHUB_STEP_SUMMARY
          cat evaluate/eval_results.md >> $GITHUB_STEP_SUMMARY
        
